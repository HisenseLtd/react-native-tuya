{"version":3,"file":"react-native-tuya.cjs.development.js","sources":["../src/bridgeUtils.ts","../src/activator.ts","../src/device.ts","../src/deviceSubscriptions.ts","../src/home.ts","../src/homeDataManager.ts","../src/homeManager.ts","../src/homeMember.ts","../src/ota.ts","../src/timer.ts","../src/user.ts"],"sourcesContent":["import { NativeEventEmitter, NativeModules } from 'react-native';\nimport { DeviceBean } from 'device'\nimport { DeviceSchemaItem } from 'home'\n\nexport const GROUPLISTENER = 'groupListener';\nexport const HARDWAREUPGRADELISTENER = 'hardwareUpgradeListener';\nexport const DEVLISTENER = 'devListener';\nexport const SUBDEVLISTENER = 'subDevListener';\nexport const HOMESTATUS = 'homeStatus';\nexport const HOMECHANGE = 'homeChange';\nexport const SINGLETRANSFER = 'SingleTransfer';\n\nlet eventEmitter = new NativeEventEmitter(NativeModules.TuyaRNEventEmitter);\n\nexport function addEvent(eventName: string, callback: (data: any) => any) {\n  return eventEmitter.addListener(eventName, callback);\n}\nexport const bridge = (key: string, id: string | number) => `${key}//${id}`;\n\n/*\n * On iOS home devices list has differences in structure, soo need to make it same as on android\n * */\nexport const prepareDeviceBean = (device: DeviceBean & { schema: string; }) => {\n  const schema = JSON.parse(device.schema) as Array<DeviceSchemaItem>;\n  const schemaMap: Record<string, DeviceSchemaItem> = {};\n  const dpCodeSchemaMap: Record<string, DeviceSchemaItem> = {};\n  schema.forEach((item) => {\n    schemaMap[item.id] = item;\n    dpCodeSchemaMap[item.code] = item;\n  });\n  return {\n    ...device,\n    schemaMap,\n    productBean: {\n      schemaInfo: {\n        dpCodeSchemaMap,\n      },\n    }\n  };\n};\n","import { DeviceBean } from 'device';\nimport { NativeModules, Platform } from 'react-native';\nimport { DeviceDetailResponse } from './home';\nimport { prepareDeviceBean } from './bridgeUtils'\n\nconst tuya = NativeModules.TuyaActivatorModule;\nconst tuyaBLEActivator = NativeModules.TuyaBLEActivatorModule;\nconst tuyaBLEScanner = NativeModules.TuyaBLEScannerModule;\n\nexport function openNetworkSettings() {\n  return tuya.openNetworkSettings({});\n}\n\nexport enum TuyaActivationType {\n  EZ = 'TY_EZ',\n  AP = 'TY_AP',\n  QR = 'TY_QR',\n}\n\nexport type InitActivatorParams = {\n  homeId: number;\n  ssid: string;\n  password: string;\n  time: number;\n  type: TuyaActivationType;\n};\n\nexport interface InitBluetoothActivatorParams {\n  deviceId?: string;\n  homeId: number;\n  ssid: string;\n  password: string;\n}\n\nexport interface StartLeScanParams {\n  timeout: number;\n  scanType:\n    | 'SINGLE'\n    | 'SINGLE_QR'\n    | 'MESH'\n    | 'SIG_MESH'\n    | 'NORMAL'\n    | 'TY_BEACON';\n}\n\ntype IOSBLEActivatorParams = {\n  homeId: number;\n  ssid: string;\n  password: string;\n  timeout: number;\n  deviceId: string;\n  productId: string;\n};\ntype AndroidBLEActivatorParams = {\n  homeId: number;\n  ssid: string;\n  password: string;\n  timeout: number;\n  uuid: string;\n  deviceType: number;\n  mac: string;\n  address: string;\n  token: string;\n};\nexport type InitBluetoothActivatorFromScanBeanParams =\n  | IOSBLEActivatorParams\n  | AndroidBLEActivatorParams;\n\nexport async function initActivator(\n  params: InitActivatorParams\n): Promise<DeviceDetailResponse> {\n  if (Platform.OS === 'ios') {\n    const device = await tuya.initActivator(params);\n    return prepareDeviceBean(device);\n  }\n  return tuya.initActivator(params);\n}\n\nexport type GetActivatorTokenParams = {\n  homeId: number;\n};\n\nexport function getActivatorToken(params: GetActivatorTokenParams) {\n  return tuya.getActivatorToken(params);\n}\n\nexport type StartQRActivatorParams = {\n  token: string;\n  time: number;\n};\n\nexport async function startQRActivator(params: StartQRActivatorParams): Promise<DeviceDetailResponse> {\n  if (Platform.OS === 'ios') {\n    const device = await tuya.initActivator({ ...params, type: 'TY_QR' });\n    return prepareDeviceBean(device);\n  }\n  return tuya.startQRActivator(params);\n}\n\nexport function stopQRActivator() {\n  if (Platform.OS === 'ios') {\n    return stopConfig();\n  }\n  return tuya.stopQRActivator();\n}\n\nexport function stopConfig() {\n  return tuya.stopConfig();\n}\n\nexport function startBluetoothScan(params: StartLeScanParams) {\n  if (Platform.OS === 'ios') {\n    return tuyaBLEScanner.startBluetoothLEScan();\n  }\n  return tuya.startBluetoothScan(params);\n}\n\nexport async function initBluetoothDualModeActivator(\n  params: InitBluetoothActivatorParams\n): Promise<DeviceBean> {\n  if (Platform.OS === 'ios') {\n    const device = await tuyaBLEActivator.initActivator(params);\n    return prepareDeviceBean(device);\n  }\n  return tuya.initBluetoothDualModeActivator(params);\n}\n\nexport async function initBluetoothDualModeActivatorFromScanBean(\n  params: InitBluetoothActivatorFromScanBeanParams\n): Promise<DeviceBean> {\n  if (Platform.OS === 'ios') {\n    const device = await tuyaBLEActivator.initActivator(params);\n    return prepareDeviceBean(device);\n  }\n  return tuya.initBluetoothDualModeActivatorFromScanBean(params);\n}\n\nexport function stopLeScan() {\n  if (Platform.OS === 'ios') {\n    return tuyaBLEScanner.stopBluetoothScan();\n  }\n  return tuya.stopBluetoothScan();\n}\n\nexport function stopLePairing() {\n  if (Platform.OS === 'ios') {\n    return tuyaBLEActivator.stopLePairing();\n  }\n  return tuya.stopLeActivation();\n}\n\nexport function getCurrentWifi(\n  success: (ssid: string) => void,\n  error: () => void\n) {\n  // We need the Allow While Using App location permission to use this.\n  return tuya.getCurrentWifi({}, success, error);\n}\n","import { NativeModules, EmitterSubscription } from 'react-native';\nimport { addEvent, bridge, DEVLISTENER } from './bridgeUtils';\nimport { DeviceSchemaItem } from './home';\n\nconst tuya = NativeModules.TuyaDeviceModule;\n\nexport type DeviceBean = {\n  productId: string;\n  devId: string;\n  verSw: string;\n  name: string;\n  dps: DeviceDps;\n  deviceType?: number;\n  address?: string;\n  homeId: number;\n  isOnline: boolean;\n  homeDisplayOrder: number;\n  roomId: number;\n  mac: string;\n  ip: string;\n  uuid: string;\n  timezoneId: string;\n  schemaMap: Record<number, DeviceSchemaItem>;\n  productBean: {\n    schemaInfo: {\n      dpCodeSchemaMap: Record<string, DeviceSchemaItem>;\n    };\n  };\n};\n\nexport type DevListenerParams = {\n  devId: string;\n};\n\nexport type DevListenerType =\n  | 'onDpUpdate'\n  | 'onRemoved'\n  | 'onStatusChanged'\n  | 'onNetworkStatusChanged'\n  | 'onDevInfoUpdate'\n  | 'onFirmwareUpgradeSuccess'\n  | 'onFirmwareUpgradeFailure'\n  | 'onFirmwareUpgradeProgress'\n  | 'onFirmwareUpgradeStatus';\n\nlet devListenerSubs: { [devId: string]: EmitterSubscription } = {};\n\nexport function registerDevListener(\n  params: DevListenerParams,\n  type: DevListenerType,\n  callback: (data: any) => void\n) {\n  tuya.registerDevListener(params);\n  const sub = addEvent(bridge(DEVLISTENER, params.devId), (data) => {\n    if (data.type === type) {\n      callback(data);\n    }\n  });\n  devListenerSubs[params.devId] = sub;\n}\n\nexport function unRegisterAllDevListeners() {\n  for (const devId in devListenerSubs) {\n    const sub = devListenerSubs[devId];\n    sub.remove();\n    tuya.unRegisterDevListener({ devId });\n  }\n  devListenerSubs = {};\n}\n\nexport type DeviceDpValue = boolean | number | string;\nexport type DeviceDps = {\n  [dpId: string]: DeviceDpValue;\n};\nexport type SendParams = {\n  devId: string;\n} & DeviceDps;\n\nexport function send(params: object) {\n  return tuya.send(params);\n}\n\nexport type RemoveDeviceParams = { devId: string };\n\nexport function removeDevice(params: RemoveDeviceParams): Promise<string> {\n  return tuya.removeDevice(params);\n}\n\nexport type RenameDeviceParams = { devId: string; name: string };\n\nexport function renameDevice(params: RenameDeviceParams): Promise<string> {\n  return tuya.renameDevice(params);\n}\n\nexport type GetDataPointStatsParams = {\n  devId: string;\n  DataPointTypeEnum: 'DAY' | 'WEEK' | 'MONTH';\n  number: number; // number of historical data result values, up to 50\n  dpId: string;\n  startTime: number; // in ms\n};\n\nexport function getDataPointStat(\n  params: GetDataPointStatsParams\n): Promise<any> {\n  return tuya.getDataPointStat(params);\n}\n\nexport type GetWifiSignalStrengthParams = { devId: string };\n\nexport function getWifiSignalStrength(\n  params: GetWifiSignalStrengthParams\n): Promise<number> {\n  return tuya.getWifiSignalStrength(params);\n}\n","import { NativeModules } from 'react-native'\nimport { addEvent, bridge, DEVLISTENER } from './bridgeUtils'\n\nconst tuya = NativeModules.TuyaDeviceModule;\n\nexport enum DeviceListenerType {\n  onDpUpdate = 'onDpUpdate',\n  onRemoved = 'onRemoved',\n  onStatusChanged = 'onStatusChanged',\n  onNetworkStatusChanged = 'onNetworkStatusChanged',\n  onDevInfoUpdate = 'onDevInfoUpdate',\n  onFirmwareUpgradeSuccess = 'onFirmwareUpgradeSuccess',\n  onFirmwareUpgradeFailure = 'onFirmwareUpgradeFailure',\n  onFirmwareUpgradeProgress = 'onFirmwareUpgradeProgress',\n  onFirmwareUpgradeStatus = 'onFirmwareUpgradeStatus',\n}\n\nconst subscriptions: Record<string, number> = {};\n\ntype TDeviceListenerOptions = {\n  devId: string;\n  type: DeviceListenerType;\n}\nexport const addDeviceListener = ({ devId, type}: TDeviceListenerOptions, cb: (data: unknown) => void, onError?: (e: unknown) => void) => {\n  if (!subscriptions[devId]) {\n    tuya.registerDevListener({ devId }).catch((e: unknown) => onError?.(e));\n    subscriptions[devId] = 0;\n  }\n  const sub = addEvent(bridge(DEVLISTENER, devId), data => {\n    if (data.type === type) {\n      cb(data);\n    }\n  });\n  subscriptions[devId]++;\n\n  return {\n    remove: () => {\n      sub.remove();\n      if (subscriptions[devId] <= 1) {\n        tuya.unRegisterDevListener({ devId });\n      }\n      subscriptions[devId]--;\n    }\n  }\n};\n\nexport const removeAllDeviceListeners = () => {\n  Object.keys(subscriptions).forEach((devId) => {\n    tuya.unRegisterDevListener({ devId });\n    delete subscriptions[devId];\n  });\n};\n","import { NativeModules, Platform } from 'react-native';\nimport { DeviceBean } from './device';\nimport { prepareDeviceBean } from './bridgeUtils'\n\nconst tuya = NativeModules.TuyaHomeModule;\n\nexport type QueryRoomListParams = {\n  homeId?: number;\n};\nexport type QueryRoomListResponse = {\n  name: string;\n  displayOrder: number;\n  id: number;\n  roomId: number;\n}[];\n\nexport function queryRoomList(\n  params: QueryRoomListParams\n): Promise<QueryRoomListResponse> {\n  return tuya.queryRoomList(params);\n}\n\nexport type GetHomeDetailParams = {\n  homeId: number;\n};\nexport type DeviceSchemaItem = {\n  id: number;\n  code: string;\n  name: string;\n  extContent: string;\n  type: 'obj' | 'raw';\n  schemaType: 'bool' | 'value' | 'enum' | 'string';\n  property: string;\n  mode: string;\n};\nexport type DeviceDetailResponse = DeviceBean;\nexport type GetHomeDetailResponse = {\n  deviceList: DeviceDetailResponse[];\n  groupList: any[];\n  meshList: any[];\n  sharedDeviceList: any[];\n  sharedGroupList: any[];\n};\n\nexport async function getHomeDetail (\n  params: GetHomeDetailParams\n): Promise<GetHomeDetailResponse> {\n  const homeDetails = await tuya.getHomeDetail(params);\n\n  /*\n  * On iOS home devices list has differences in structure, soo need to make it same as on android\n  * */\n  if (Platform.OS === 'ios' && homeDetails.deviceList) {\n    const deviceList = homeDetails.deviceList?.map((i: DeviceDetailResponse & { schema: string}) => {\n      return prepareDeviceBean(i);\n    });\n\n    return { ...homeDetails, deviceList }\n  }\n  return homeDetails;\n}\n\nexport type UpdateHomeParams = {\n  homeId: number;\n  name: string;\n  geoName: string;\n  lon: number;\n  lat: number;\n};\n\nexport function updateHome(params: UpdateHomeParams): Promise<string> {\n  return tuya.updateHome(params);\n}\n\nexport type DismissHomeParams = {\n  homeId: number;\n};\n\nexport function dismissHome(params: DismissHomeParams): Promise<string> {\n  return tuya.dismissHome(params);\n}\n\nexport type SortRoomsParams = {\n  idList: number[];\n  homeId: number;\n};\n\nexport function sortRoom(params: SortRoomsParams): Promise<string> {\n  return tuya.sortRoom(params);\n}\n","import { NativeModules } from 'react-native';\n\nconst tuya = NativeModules.TuyaHomeDataManagerModule;\n\nexport type GetRoomDeviceListParams = {\n  homeId?: number;\n  roomId: number;\n};\n\nexport type GetRoomDeviceListResponse = {\n  deviceList: {}[];\n  groupList: {}[];\n};\n\nexport function getRoomDeviceList(\n  params: GetRoomDeviceListParams\n): Promise<GetRoomDeviceListResponse> {\n  return tuya.getRoomDeviceList(params);\n}\n","import { NativeModules, Platform } from 'react-native';\n\nconst tuya = NativeModules.TuyaHomeManagerModule;\n\nexport type CreateHomeParams = {\n  name: string;\n  geoName: string;\n  lon: number;\n  lat: number;\n  rooms: string[];\n};\n\nexport function createHome(params: CreateHomeParams): Promise<{ homeId: number } & Partial<HomeDetailsResponse>> {\n  return tuya.createHome(params);\n}\n\nexport type HomeDetailsResponse = {\n  name: string;\n  admin: boolean;\n  background: string;\n  dealStatus: 1 | 2; // 1 = unaccepted 2 = accepted\n  displayOrder: number;\n  geoName: string;\n  gid: number;\n  homeId: number;\n  lat: number;\n  lon: number;\n};\n\nexport type QueryHomeListResponse = HomeDetailsResponse[];\n\nexport async function queryHomeList(): Promise<QueryHomeListResponse> {\n  let homes = await tuya.queryHomeList();\n  // Tuya's Android SDK uses different property names than the iOS SDK...\n  if (Platform.OS === 'android') {\n    homes = homes.map((m: any) => ({\n      ...m,\n      dealStatus: m.homeStatus,\n    }));\n  }\n  return homes;\n}\n\nexport type JoinFamilyParams = {\n  homeId: number;\n  action: boolean;\n};\n\nexport function joinFamily(params: JoinFamilyParams) {\n  return tuya.joinFamily(params);\n}\n","import { NativeModules, Platform } from 'react-native';\n\nconst tuya = NativeModules.TuyaHomeMemberModule;\n\nexport type QueryMemberListParams = { homeId: number };\nexport type MemberListItem = {\n  admin: boolean;\n  username: string;\n  id: number;\n  dealStatus: number;\n};\nexport type QueryMemberListResponse = MemberListItem[];\n\nexport async function queryMemberList(\n  params: QueryMemberListParams\n): Promise<QueryMemberListResponse> {\n  let members = await tuya.queryMemberList(params);\n  // Tuya's Android SDK uses different property names than the iOS SDK...\n  if (Platform.OS === 'android') {\n    members = members.map((m: any) => ({\n      admin: m.admin,\n      username: m.account,\n      id: m.memberId,\n      dealStatus: m.memberStatus,\n    }));\n  }\n  return members;\n}\n\nexport type AddMemberParams = {\n  homeId: number;\n  userAccount: string; // email\n  countryCode: string;\n  name: string;\n  admin: boolean;\n};\n\nexport function addMember(params: AddMemberParams): Promise<any> {\n  return tuya.addMember(params);\n}\n\nexport type RemoveMemberParams = {\n  memberId: number;\n};\n\nexport function removeMember(params: RemoveMemberParams): Promise<any> {\n  return tuya.removeMember(params);\n}\n","import { NativeModules, Platform } from 'react-native';\nimport { addEvent, bridge, HARDWAREUPGRADELISTENER } from './bridgeUtils';\n\nconst tuya = Platform.OS === 'ios' ? NativeModules.TuyaDeviceModule : NativeModules.TuyaOTAModule;\n\nexport type StartOtaParams = {\n  devId: string;\n};\n\nexport function startOta(\n  params: StartOtaParams,\n  onSuccess: (data: any) => void,\n  onFailure: (data: any) => void,\n  onProgress: (data: any) => void\n) {\n  tuya.startOta(params);\n  return addEvent(bridge(HARDWAREUPGRADELISTENER, params.devId), data => {\n    if (data.type === 'onSuccess') {\n      onSuccess(data);\n    } else if (data.type === 'onFailure') {\n      onFailure(data);\n    } else if (data.type === 'onProgress') {\n      onProgress(data);\n    }\n  });\n}\n\nexport enum TuyaUpgradeStatus {\n  noUpdate,\n  updateAvailable,\n  updating,\n  waitForDevice = 5,\n}\nexport type ThingSmartFirmwareUpgradeModel = {\n  timeout: number;\n  controlType: boolean;\n  currentVersion: string;\n  devType: number;\n  upgradedType: number;\n  canUpgrade: boolean;\n  autoSwitch: boolean;\n  typeDesc: string;\n  type: number;\n  upgradeStatus: TuyaUpgradeStatus;\n  diffOta: false;\n  url?: string;\n  lastUpgradeTime: number;\n  firmwareDeployTime: number;\n  upgradeMode?: number;\n  desc?: string;\n  md5?: string;\n  upgradingDesc?: string;\n  fileSize: string;\n  version: string;\n};\n\nexport function getOtaInfo(params: { devId: string }): Promise<ThingSmartFirmwareUpgradeModel[]> {\n  return tuya.getOtaInfo(params);\n}\n\nexport function startFirmwareUpgrade(params: { devId: string }): Promise<'success'> {\n  return tuya.startFirmwareUpgrade(params);\n}\n","import { NativeModules } from 'react-native';\nimport { DeviceDps } from './device';\n\nconst tuya = NativeModules.TuyaTimerModule;\n\nexport type AddTimerWithTaskDpsParams = {\n  devId: number;\n  taskName: string;\n  loops: string; // Number of cycles \"0000000\", each 0: off, 1: on, from left to right: Sunday, Monday, Tuesday, Wednesday, Thursday, Friday, Saturday\n  time: string; // e.g. 14:29\n  dps: DeviceDps;\n};\n\nexport function addTimerWithTask(\n  params: AddTimerWithTaskDpsParams\n): Promise<any> {\n  return tuya.addTimerWithTask(params);\n}\n\nexport type UpdateTimerWithTaskParams = AddTimerWithTaskDpsParams & {\n  timerId: string;\n  isOpen: boolean;\n};\n\nexport function updateTimerWithTask(\n  params: UpdateTimerWithTaskParams\n): Promise<any> {\n  return tuya.updateTimerWithTask(params);\n}\n\nexport type GetTimerTaskStatusWithDeviceIdParams = {\n  devId: number;\n};\n\nexport function getTimerTaskStatusWithDeviceId(\n  params: GetTimerTaskStatusWithDeviceIdParams\n): Promise<any> {\n  return tuya.getTimerTaskStatusWithDeviceId(params);\n}\n\nexport type GetAllTimerWithDeviceIdParams = {\n  devId: number;\n};\n\nexport type TimerTask = {\n  timerList: {\n    timerId: string;\n    loops: string;\n    time: string;\n    status: number;\n  }[];\n  timerTaskStatus: { open: boolean; timerName: string };\n};\n\nexport type GetAllTimerWithDeviceIdResponse = TimerTask[];\n\nexport async function getAllTimerWithDeviceId(\n  params: GetAllTimerWithDeviceIdParams\n): Promise<GetAllTimerWithDeviceIdResponse> {\n  const timers = await tuya.getAllTimerWithDeviceId(params);\n  timers.forEach((t: any) => {\n    t.timerTaskStatus.open = !!t.timerTaskStatus.open;\n  });\n  return timers;\n}\n\nexport type RemoveTimerWithTaskParams = {\n  devId: number;\n  taskName: string;\n  timerId: string;\n};\n\nexport function removeTimerWithTask(\n  params: RemoveTimerWithTaskParams\n): Promise<any> {\n  return tuya.removeTimerWithTask(params);\n}\n\nexport type UpdateTimerStatusWithTaskParams = {\n  devId: number;\n  taskName: string;\n  timerId: string;\n  isOpen: boolean;\n};\n\nexport function updateTimerStatusWithTask(\n  params: UpdateTimerStatusWithTaskParams\n): Promise<any> {\n  return tuya.updateTimerStatusWithTask(params);\n}\n","import { NativeModules } from 'react-native';\n\nconst tuya = NativeModules.TuyaUserModule;\n\nexport function registerAccountWithEmail(\n  params: RegisterAccountWithEmailParams\n): Promise<any> {\n  return tuya.registerAccountWithEmail(params);\n}\n\nexport function getRegisterEmailValidateCode(\n  params: GetEmailValidateCodeParams\n): Promise<any> {\n  return tuya.getRegisterEmailValidateCode(params);\n}\n\nexport function sendVerifyCodeWithUserName(params: SendVerifyCodeWithUserNameParams): Promise<any> {\n  return tuya.sendVerifyCodeWithUserName(params);\n}\n\nexport function loginWithEmail(params: LoginWithEmailParams): Promise<any> {\n  return tuya.loginWithEmail(params);\n}\n\nexport function getEmailValidateCode(\n  params: GetEmailValidateCodeParams\n): Promise<any> {\n  return tuya.getEmailValidateCode(params);\n}\n\nexport function resetEmailPassword(\n  params: ResetEmailPasswordParams\n): Promise<any> {\n  return tuya.resetEmailPassword(params);\n}\n\nexport function logout(): Promise<string> {\n  return tuya.logout();\n}\n\nexport function getCurrentUser(): Promise<User | null> {\n  return tuya.getCurrentUser();\n}\n\nexport function getUser(): Promise<User | null> {\n  return tuya.getUser();\n}\n\nexport function cancelAccount(): Promise<string> {\n  return tuya.cancelAccount();\n}\n\nexport async function loginWithUid(params: LoginWithUIDParams): Promise<any> {\n  return tuya.loginWithUid(params);\n}\n\nexport async function loginOrRegisterWithUid(params: LoginOrRegisterWithUidParams): Promise<any> {\n  return tuya.loginOrRegisterWithUid(params);\n}\n\nexport type User = {\n  email: string;\n  username: string;\n  sid: string;\n  timezoneId: string;\n  uid: string;\n  userType: number;\n  headPic: string;\n  mobile: string;\n  nickName: string;\n  phoneCode: string;\n};\n\nexport type RegisterAccountWithEmailParams = {\n  countryCode: string;\n  email: string;\n  validateCode: string;\n  password: string;\n};\n\nexport type GetEmailValidateCodeParams = {\n  countryCode: string;\n  email: string;\n};\n\nexport type SendVerifyCodeWithUserNameParams = {\n  countryCode: string;\n  email: string;\n  region: string;\n  type: 1 | 2 | 3;\n}\n\nexport type LoginWithEmailParams = {\n  email: string;\n  password: string;\n  countryCode: string;\n};\n\nexport type ResetEmailPasswordParams = {\n  email: string;\n  countryCode: string;\n  validateCode: string;\n  newPassword: string;\n};\n\nexport type LoginWithUIDParams = {\n  uid: string;\n  password: string;\n  countryCode: string;\n}\n\nexport type LoginOrRegisterWithUidParams = {\n  uid: string;\n  password: string;\n  countryCode: string;\n}\n"],"names":["GROUPLISTENER","HARDWAREUPGRADELISTENER","DEVLISTENER","SUBDEVLISTENER","HOMESTATUS","HOMECHANGE","SINGLETRANSFER","eventEmitter","NativeEventEmitter","NativeModules","TuyaRNEventEmitter","addEvent","eventName","callback","addListener","bridge","key","id","prepareDeviceBean","device","schema","JSON","parse","schemaMap","dpCodeSchemaMap","forEach","item","code","_extends","productBean","schemaInfo","tuya","TuyaActivatorModule","tuyaBLEActivator","TuyaBLEActivatorModule","tuyaBLEScanner","TuyaBLEScannerModule","openNetworkSettings","TuyaActivationType","initActivator","_x","_initActivator","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","params","wrap","_callee$","_context","prev","next","Platform","OS","sent","abrupt","stop","getActivatorToken","startQRActivator","_x2","_startQRActivator","_callee2","_callee2$","_context2","type","stopQRActivator","stopConfig","startBluetoothScan","startBluetoothLEScan","initBluetoothDualModeActivator","_x3","_initBluetoothDualModeActivator","_callee3","_callee3$","_context3","initBluetoothDualModeActivatorFromScanBean","_x4","_initBluetoothDualModeActivatorFromScanBean","_callee4","_callee4$","_context4","stopLeScan","stopBluetoothScan","stopLePairing","stopLeActivation","getCurrentWifi","success","error","TuyaDeviceModule","devListenerSubs","registerDevListener","sub","devId","data","unRegisterAllDevListeners","remove","unRegisterDevListener","send","removeDevice","renameDevice","getDataPointStat","getWifiSignalStrength","DeviceListenerType","subscriptions","addDeviceListener","_ref","cb","onError","e","removeAllDeviceListeners","Object","keys","TuyaHomeModule","queryRoomList","getHomeDetail","_getHomeDetail","homeDetails","_homeDetails$deviceLi","deviceList","map","i","updateHome","dismissHome","sortRoom","TuyaHomeDataManagerModule","getRoomDeviceList","TuyaHomeManagerModule","createHome","queryHomeList","_queryHomeList","homes","m","dealStatus","homeStatus","joinFamily","TuyaHomeMemberModule","queryMemberList","_queryMemberList","members","admin","username","account","memberId","memberStatus","addMember","removeMember","TuyaOTAModule","startOta","onSuccess","onFailure","onProgress","TuyaUpgradeStatus","getOtaInfo","startFirmwareUpgrade","TuyaTimerModule","addTimerWithTask","updateTimerWithTask","getTimerTaskStatusWithDeviceId","getAllTimerWithDeviceId","_getAllTimerWithDeviceId","timers","t","timerTaskStatus","open","removeTimerWithTask","updateTimerStatusWithTask","TuyaUserModule","registerAccountWithEmail","getRegisterEmailValidateCode","sendVerifyCodeWithUserName","loginWithEmail","getEmailValidateCode","resetEmailPassword","logout","getCurrentUser","getUser","cancelAccount","loginWithUid","_loginWithUid","loginOrRegisterWithUid","_loginOrRegisterWithUid"],"mappings":"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"}